apiVersion: spp-data-protection.isf.ibm.com/v1alpha1
kind: Recipe
metadata:
  name: child-cert-manager-recipe
  namespace: <cert manager namespace>
  labels:
    dp.isf.ibm.com/parent-recipe: cpfs-singleton-parent-recipe
    dp.isf.ibm.com/parent-recipe-namespace: <fusion ns>
spec:
  appType: singleton
  groups:
    - includeClusterResources: true
      includedResourceTypes:
        - certmanagerconfigs.operator.ibm.com
        - customresourcedefinitions.apiextensions.k8s.io
        - clusterrole
        - clusterrolebinding
        - role
        - rolebinding
        - serviceaccount
        - deployments
        - secrets
      labelSelector: foundationservices.cloudpak.ibm.com=ibm-cm-chart
      name: cert-manager-resources
      type: resource
    - backupRef: cert-manager-resources
      includeClusterResources: true
      includedResourceTypes:
        - customresourcedefinitions.apiextensions.k8s.io
      name: cert-manager-crd
      type: resource
    - backupRef: cert-manager-resources
      includeClusterResources: true
      includedResourceTypes:
        - serviceaccount
        - clusterrole
        - clusterrolebinding
        - role
        - rolebinding
      name: cert-manager-rbac-resources
      type: resource
    - backupRef: cert-manager-resources
      includeClusterResources: true
      includedResourceTypes:
        - certmanagerconfigs.operator.ibm.com
        - secrets
      name: cert-manager-workload-resources
      type: resource
    - backupRef: cert-manager-resources
      includeClusterResources: true
      includedResourceTypes:
        - deployments
      name: cert-manager-deployment
      type: resource
  hooks:
    - chks:
        - condition: '{$.status.phase} == {"Running"}'
          name: podReady
          onError: fail
          timeout: 600
      labelSelector: app.kubernetes.io/name=cert-manager
      name: cert-manager-operator-check
      namespace: <cert manager namespace>
      onError: fail
      selectResource: pod
      timeout: 600
      type: check
    - chks:
        - condition: '{$.spec.replicas} == {$.status.readyReplicas}'
          name: podReady
          onError: fail
          timeout: 600
      name: cert-manager-webhook-check
      nameSelector: cert-manager-webhook
      namespace: <cert manager namespace>
      onError: fail
      selectResource: deployment
      timeout: 600
      type: check
  workflows:
    - failOn: essential-error
      name: singleton-resources-backup
      sequence:
        - group: cert-manager-resources
    - failOn: essential-error
      name: singleton-resources-restore
      sequence:
        - group: cert-manager-crd
        - group: cert-manager-rbac-resources
        - group: cert-manager-workload-resources
        - group: cert-manager-deployment
        - hook: cert-manager-operator-check/podReady
        - hook: cert-manager-webhook-check/podReady