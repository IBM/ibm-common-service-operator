apiVersion: spp-data-protection.isf.ibm.com/v1alpha1
kind: Recipe
metadata:
  name: cs-recipe
  namespace: <spectrum fusion ns>
spec:
  appType: common-service
  groups:
    - includeClusterResources: true
      includedResourceTypes:
        - secrets
        - certificates.cert-manager.io
        - issuers.cert-manager.io
        - certmanagerconfigs.operator.ibm.com
        - customresourcedefinitions.apiextensions.k8s.io
      labelSelector: foundationservices.cloudpak.ibm.com=cert-manager
      name: cert-manager-resources
      type: resource
    - backupRef: cert-manager-resources
      includeClusterResources: true
      includedResourceTypes:
        - customresourcedefinitions.apiextensions.k8s.io
      name: cert-manager-crds
      type: resource
    - backupRef: cert-manager-resources
      includeClusterResources: true
      includedResourceTypes:
        - secrets
        - certificates.cert-manager.io
        - issuers.cert-manager.io
        - clusterissuers.cert-manager.io
        - certmanagerconfigs.operator.ibm.com
      name: cert-manager-workload-resources
      labelSelector: foundationservices.cloudpak.ibm.com=cert-manager
      type: resource
    - includeClusterResources: true
      includedResourceTypes:
        - customresourcedefinitions.apiextensions.k8s.io
        - secrets
        - ibmlicenseservicereporters.operator.ibm.com
      labelSelector: foundationservices.cloudpak.ibm.com=lsr
      name: license-service-reporter-parent
      type: resource
    - backupRef: license-service-reporter-parent
      includeClusterResources: true
      includedResourceTypes:
        - customresourcedefinitions.apiextensions.k8s.io
      name: license-service-reporter-crd
      type: resource
    - backupRef: license-service-reporter-parent
      includeClusterResources: true
      includedResourceTypes:
        - secrets
        - ibmlicenseservicereporters.operator.ibm.com
      name: license-service-reporter-instances
      type: resource
    - labelSelector: foundationservices.cloudpak.ibm.com=licensing
      name: licensing-resources
      type: resource
    - includeClusterResources: true
      includedResourceTypes:
        - deployments
        - serviceaccount
        - role
        - rolebinding
        - configmaps
      labelSelector: foundationservices.cloudpak.ibm.com=lsr-data
      name: license-service-reporter-resources
      type: resource
    - backupRef: license-service-reporter-resources
      includeClusterResources: true
      includedResourceTypes:
        - serviceaccount
        - role
        - rolebinding
        - configmaps
      name: lsr-pre-deploy
      type: resource
    - backupRef: license-service-reporter-resources
      includeClusterResources: true
      includedResourceTypes:
        - deployments
      name: lsr-deployment
      type: resource
    - labelSelector: foundationservices.cloudpak.ibm.com=lsr-data
      name: lsr-volume
      type: volume
    - includedResourceTypes:
        - catalogsources.operators.coreos.com
      labelSelector: foundationservices.cloudpak.ibm.com=catalog
      name: common-services-catalogs
      type: resource
    - includedNamespaces:
        - openshift-config
      includedResourceTypes:
        - secrets
      labelSelector: foundationservices.cloudpak.ibm.com=pull-secret
      name: pull-secret
      type: resource
    - backupRef: pull-secret
      includedNamespaces:
        - openshift-config
      includedResourceTypes:
        - secrets
      labelSelector: foundationservices.cloudpak.ibm.com=pull-secret
      name: ow-pull-secret
      restoreOverwriteResources: true
      type: resource
    - includedResourceTypes:
        - configmaps
      labelSelector: foundationservices.cloudpak.ibm.com=configmap
      name: common-services-configmaps
      type: resource
    - includedResourceTypes:
        - roles
        - rolebindings
        - serviceaccounts
      labelSelector: foundationservices.cloudpak.ibm.com=permissions
      name: cs-operator-permissions
      type: resource
    - includeClusterResources: true
      labelSelector: foundationservices.cloudpak.ibm.com=namespace
      name: common-services-namespace
      type: resource
    - includedResourceTypes:
        - operatorgroups.operators.coreos.com
      labelSelector: foundationservices.cloudpak.ibm.com=operatorgroup
      name: common-services-operatorgroups
      type: resource
    - includedResourceTypes:
        - subscriptions.operators.coreos.com
      labelSelector: foundationservices.cloudpak.ibm.com=subscription
      name: common-services-subscriptions
      type: resource
    - includedResourceTypes:
        - subscriptions.operators.coreos.com
      labelSelector: foundationservices.cloudpak.ibm.com=singleton-subscription
      name: singleton-subscriptions
      type: resource
    - includedResourceTypes:
        - subscriptions.operators.coreos.com
      labelSelector: foundationservices.cloudpak.ibm.com=singleton-subscription
      name: cert-manager-subscription
      type: resource
    - includedResourceTypes:
        - subscriptions.operators.coreos.com
      labelSelector: foundationservices.cloudpak.ibm.com=lsr
      name: license-service-reporter-subscriptions
      type: resource
    - includeClusterResources: true
      includedResourceTypes:
        - customresourcedefinitions.apiextensions.k8s.io
      labelSelector: foundationservices.cloudpak.ibm.com=crd
      name: commonservices-crd
      type: resource
    - includedResourceTypes:
        - commonservices.operator.ibm.com
      labelSelector: foundationservices.cloudpak.ibm.com=commonservice
      name: commonservice-cr
      type: resource
    - includedResourceTypes:
        - roles
        - rolebindings
        - serviceaccounts
        - namespacescopes.operator.ibm.com
      labelSelector: foundationservices.cloudpak.ibm.com=nss
      name: nss-resources
      type: resource
    - includedResourceTypes:
        - operandrequests.operator.ibm.com
        - operandconfigs.operator.ibm.com
      labelSelector: foundationservices.cloudpak.ibm.com=operand
      name: odlm-resources
      type: resource
    - backupRef: odlm-resources
      includedResourceTypes:
        - operandrequests.operator.ibm.com
        - operandconfigs.operator.ibm.com
      labelSelector: foundationservices.cloudpak.ibm.com=operand
      name: operand-resources
      restoreOverwriteResources: true
      type: resource
    - labelSelector: foundationservices.cloudpak.ibm.com=zen5-data
      name: zen-volume
      type: volume
    - includeClusterResources: true
      includedResourceTypes:
        - deployments
        - serviceaccount
        - role
        - rolebinding
        - configmaps
      labelSelector: foundationservices.cloudpak.ibm.com=zen5-data
      name: zen-br-resources
      type: resource
    - includeClusterResources: true
      includedResourceTypes:
        - zenservices.zen.cpd.ibm.com
        - customresourcedefinitions.apiextensions.k8s.io
      labelSelector: foundationservices.cloudpak.ibm.com=zen
      name: zenservice
      type: resource
    - backupRef: zen-br-resources
      labelSelector: foundationservices.cloudpak.ibm.com=zen5-data
      includeClusterResources: true
      includedResourceTypes:
        - serviceaccount
        - role
        - rolebinding
        - configmaps
      name: zen-pre-deploy
      type: resource
    - backupRef: zen-br-resources
      includeClusterResources: true
      labelSelector: foundationservices.cloudpak.ibm.com=zen5-data
      includedResourceTypes:
        - deployments
      name: zen-deployment
      type: resource
    - labelSelector: foundationservices.cloudpak.ibm.com=cs-db-data
      name: cs-db-volume
      type: volume
    - includeClusterResources: true
      includedResourceTypes:
        - deployments
        - serviceaccount
        - role
        - rolebinding
        - configmaps
      labelSelector: foundationservices.cloudpak.ibm.com=cs-db-data
      name: cs-db-br-resources
      type: resource
    - backupRef: cs-db-br-resources
      includeClusterResources: true
      labelSelector: foundationservices.cloudpak.ibm.com=cs-db-data
      includedResourceTypes:
        - serviceaccount
        - role
        - rolebinding
        - configmaps
      name: cs-db-pre-deploy
      type: resource
    - backupRef: cs-db-br-resources
      includeClusterResources: true
      labelSelector: foundationservices.cloudpak.ibm.com=cs-db-data
      includedResourceTypes:
        - deployments
      name: cs-db-deployment
      type: resource
  hooks:
    - chks:
        - condition: '{$.status.phase} == {"Running"}'
          name: podReady
          onError: fail
          timeout: 600
      labelSelector: 'k8s.enterprisedb.io/cluster=common-service-db,role=primary'
      name: common-service-db-check
      namespace: <service namespace>
      onError: fail
      selectResource: pod
      timeout: 600
      type: check
    - chks:
        - condition: '{$.spec.replicas} == {$.status.readyReplicas}'
          name: podReady
          onError: fail
          timeout: 600
      name: nss-check
      nameSelector: ibm-namespace-scope-operator
      namespace: <operator namespace>
      onError: fail
      selectResource: deployment
      timeout: 600
      type: check
    - chks:
        - condition: '{$.status.phase} == {"Running"}'
          name: podReady
          onError: fail
          timeout: 600
      labelSelector: app.kubernetes.io/name=operand-deployment-lifecycle-manager
      name: odlm-check
      namespace: <operator namespace>
      onError: fail
      selectResource: pod
      timeout: 600
      type: check
    - chks:
        - condition: '{$.status.phase} == {"Running"}'
          name: podReady
          onError: fail
          timeout: 600
      labelSelector: app.kubernetes.io/name=cert-manager
      name: cert-manager-operator-check
      namespace: <cert manager namespace>
      onError: fail
      selectResource: pod
      timeout: 600
      type: check
    - chks:
        - condition: '{$.spec.replicas} == {$.status.readyReplicas}'
          name: podReady
          onError: fail
          timeout: 600
      name: cert-manager-webhook-check
      nameSelector: cert-manager-webhook
      namespace: <cert manager namespace>
      onError: fail
      selectResource: deployment
      timeout: 600
      type: check
    - chks:
        - condition: '{$.status.phase} == {"Running"}'
          name: podReady
          onError: fail
          timeout: 600
      name: license-service-reporter-check
      labelSelector: app.kubernetes.io/name=ibm-license-service-reporter
      namespace: <lsr namespace>
      onError: fail
      selectResource: pod
      timeout: 600
      type: check
    - chks:
        - condition: '{$.spec.replicas} == {$.status.readyReplicas}'
          name: podReady
          onError: fail
          timeout: 600
      labelSelector: foundationservices.cloudpak.ibm.com=lsr-data
      name: lsr-deployment
      namespace: <lsr namespace>
      onError: fail
      selectResource: deployment
      timeout: 600
      type: check
    - labelSelector: foundationservices.cloudpak.ibm.com=lsr-data
      name: lsr-data
      namespace: <lsr namespace>
      onError: fail
      ops:
        - command: |
            ["/bin/bash", "-c", "rm -rf /lsr/lsr-backup/database; /lsr/br_lsr.sh <lsr namespace> backup"]
          container: lsr-backup-job
          name: backup
          timeout: 600
        - command: |
            ["/bin/bash", "-c", "/lsr/br_lsr.sh <lsr namespace> restore"]
          container: lsr-backup-job
          name: restore
          timeout: 2000
      selectResource: pod
      type: exec
    - chks:
        - condition: '{$.status.phase} == {"Running"}'
          name: podReady
          onError: fail
          timeout: 1200
      labelSelector: 'k8s.enterprisedb.io/cluster=zen-metastore-edb,role=primary'
      name: zen-metastore-edb-check
      namespace: <service namespace>
      onError: fail
      selectResource: pod
      timeout: 1200
      type: check
    - chks:
        - condition: '{$.status.phase} == {"Running"}'
          name: podReady
          onError: fail
          timeout: 600
      labelSelector: foundationservices.cloudpak.ibm.com=cs-db-data
      name: cs-db-deployment
      namespace: <service namespace>
      onError: fail
      selectResource: pod
      timeout: 600
      type: check
    - chks:
        - condition: '{$.spec.replicas} == {$.status.readyReplicas}'
          name: podReady
          onError: fail
          timeout: 600
      name: platform-identity-provider
      nameSelector: platform-identity-provider
      namespace: <service namespace>
      onError: fail
      selectResource: deployment
      timeout: 600
      type: check
    - chks:
        - condition: '{$.spec.replicas} == {$.status.readyReplicas}'
          name: podReady
          onError: fail
          timeout: 600
      name: platform-auth-service
      nameSelector: platform-auth-service
      namespace: <service namespace>
      onError: fail
      selectResource: deployment
      timeout: 600
      type: check
    - chks:
        - condition: '{$.spec.replicas} == {$.status.readyReplicas}'
          name: podReady
          onError: fail
          timeout: 600
      name: platform-identity-management
      nameSelector: platform-identity-management
      namespace: <service namespace>
      onError: fail
      selectResource: deployment
      timeout: 600
      type: check
    - labelSelector: foundationservices.cloudpak.ibm.com=cs-db-data
      name: cs-db-data
      namespace: <service namespace>
      onError: fail
      ops:
        - command: |
            ["/bin/bash", "-c", "/cs-db/br_cs-db.sh backup <service namespace>"]
          container: cs-db-br
          name: cs-db-backup-pre
          timeout: 600
        - command: |
            ["/bin/bash", "-c", "rm -rf /cs-db/cs-db-backup/database"]
          container: cs-db-br
          name: cs-db-backup-post
          timeout: 600
        - command: |
            ["/bin/bash", "-c", "sleep 120 && /cs-db/br_cs-db.sh restore <service namespace>"]
          container: cs-db-br
          name: restore
          timeout: 2000
      selectResource: pod
      type: exec
    - chks:
        - condition: '{$.status.phase} == {"Running"}'
          name: podReady
          onError: fail
          timeout: 600
      labelSelector: foundationservices.cloudpak.ibm.com=zen5-data
      name: zen5-deployment-1
      namespace: <zenservice1 namespace>
      onError: fail
      selectResource: pod
      timeout: 600
      type: check
    - labelSelector: foundationservices.cloudpak.ibm.com=zen5-data
      name: zen5-data-1
      namespace: <service namespace>
      onError: fail
      ops:
        - command: |
            ["/bin/bash", "-c", "rm -rf /zen5/zen-backup/database && rm -rf /zen5/zen-backup/objstorage && rm -rf /zen5/zen-backup/secrets && rm -rf /zen5/zen-backup/workspace; /zen5/backup_zen5.sh <zenservice1 namespace>"]
          container: zen5-backup-job
          name: backup
          timeout: 600
        - command: |
            ["/bin/bash", "-c", "/zen5/restore_zen5.sh <zenservice1 namespace> <zenservice1 name>"]
          container: zen5-backup-job
          name: restore
          timeout: 3600
      selectResource: pod
      type: exec
    - chks:
        - condition: '{$.status.phase} == {"Running"}'
          name: podReady
          onError: fail
          timeout: 600
      labelSelector: foundationservices.cloudpak.ibm.com=zen5-data
      name: zen5-deployment-2
      namespace: <zenservice2 namespace>
      onError: fail
      selectResource: pod
      timeout: 600
      type: check
    - labelSelector: foundationservices.cloudpak.ibm.com=zen5-data
      name: zen5-data-2
      namespace: <zenservice2 namespace>
      onError: fail
      ops:
        - command: |
            ["/bin/bash", "-c", "rm -rf /zen5/zen-backup/database && rm -rf /zen5/zen-backup/objstorage && rm -rf /zen5/zen-backup/secrets && rm -rf /zen5/zen-backup/workspace; /zen5/backup_zen5.sh <zenservice2 namespace>"]
          container: zen5-backup-job
          name: backup
          timeout: 600
        - command: |
            ["/bin/bash", "-c", "/zen5/restore_zen5.sh <zenservice2 namespace> <zenservice2 name>"]
          container: zen5-backup-job
          name: restore
          timeout: 3600
      selectResource: pod
      type: exec
    # - chks:
    #     - condition: '{$.status.phase} == {"Running"}'
    #       name: podReady
    #       onError: fail
    #       timeout: 600
    #   labelSelector: foundationservices.cloudpak.ibm.com=zen5-data
    #   name: zen5-deployment-3
    #   namespace: <zenservice3 namespace>
    #   onError: fail
    #   selectResource: pod
    #   timeout: 600
    #   type: check
    # - labelSelector: foundationservices.cloudpak.ibm.com=zen5-data
    #   name: zen5-data-3
    #   namespace: <zenservice3 namespace>
    #   onError: fail
    #   ops:
    #     - command: |
    #         ["/bin/bash", "-c", "rm -rf /zen5/zen-backup/database && rm -rf /zen5/zen-backup/objstorage && rm -rf /zen5/zen-backup/secrets && rm -rf /zen5/zen-backup/workspace; /zen5/backup_zen5.sh <zenservice3 namespace>"]
    #       container: zen5-backup-job
    #       name: backup
    #       timeout: 600
    #     - command: |
    #         ["/bin/bash", "-c", "/zen5/restore_zen5.sh <zenservice3 namespace> <zenservice3 name>"]
    #       container: zen5-backup-job
    #       name: restore
    #       timeout: 3600
    #   selectResource: pod
    #   type: exec
  workflows:
    - failOn: any-error
      name: backup
      sequence:
        - hook: cs-db-data/cs-db-backup-pre
        - group: cs-db-br-resources
        - hook: lsr-data/backup
        - group: lsr-volume
        - group: license-service-reporter-parent
        - group: license-service-reporter-resources
        - hook: zen5-data-1/backup
        - hook: zen5-data-2/backup
        # - hook: zen5-data-3/backup
        - group: zenservice
        - group: zen-br-resources
        - group: common-services-namespace
        - group: pull-secret
        - group: common-services-catalogs
        - group: common-services-operatorgroups
        - group: cert-manager-subscription
        - group: cert-manager-resources
        - group: common-services-configmaps
        - group: license-service-reporter-crd
        - group: commonservices-crd
        - group: commonservice-cr
        - group: nss-resources
        - group: singleton-subscriptions
        - group: license-service-reporter-subscriptions
        - group: common-services-subscriptions
        - group: operand-resources
        - group: odlm-resources
        - group: licensing-resources
        - group: cs-db-volume
        - hook: cs-db-data/cs-db-backup-post
        - group: zen-volume
    - failOn: any-error
      name: restore
      sequence:
        - group: common-services-namespace
        - group: pull-secret
        - group: ow-pull-secret
        - group: common-services-catalogs
        - group: common-services-operatorgroups
        - group: cert-manager-crds
        - group: cert-manager-workload-resources
        - group: cert-manager-subscription
        - hook: cert-manager-operator-check/podReady
        - hook: cert-manager-webhook-check/podReady
        - group: license-service-reporter-crd
        - group: singleton-subscriptions
        - group: common-services-configmaps
        - group: commonservice-crd
        - group: commonservice-cr
        - group: licensing-resources
        - group: license-service-reporter-subscriptions
        - hook: license-service-reporter-check/podReady
        - group: license-service-reporter-instances
        - group: lsr-pre-deploy
        - group: lsr-volume
        - group: lsr-deployment
        - hook: lsr-deployment/podReady
        - hook: lsr-data/restore
        # restore common services
        - group: common-services-configmaps
        - group: commonservices-crd
        - group: commonservice-cr
        - group: nss-resources
        - group: common-services-subscriptions
        - hook: nss-check/podReady
        - hook: odlm-check/podReady
        - group: odlm-resources
        - group: operand-resources
        - hook: common-service-db-check/podReady
        - group: zenservice
        - group: cs-db-pre-deploy
        - group: cs-db-volume
        - group: cs-db-deployment
        - hook: cs-db-deployment/podReady
        - hook: platform-identity-management/podReady
        - hook: platform-auth-service/podReady
        - hook: platform-identity-provider/podReady
        - hook: cs-db-data/restore
        - hook: zen-metastore-edb-check/podReady
        - group: zen-pre-deploy
        - group: zen-volume
        - group: zen-deployment
        - hook: zen5-deployment-1/podReady
        - hook: zen5-data-1/restore
        - hook: zen5-deployment-2/podReady
        - hook: zen5-data-2/restore
        # - hook: zen5-deployment-3/podReady
        # - hook: zen5-data-3/restore
    