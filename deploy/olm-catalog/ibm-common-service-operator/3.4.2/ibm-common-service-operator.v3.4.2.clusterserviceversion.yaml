apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "operator.ibm.com/v3",
          "kind": "CommonService",
          "metadata": {
            "labels": {
              "app.kubernetes.io/instance": "ibm-common-service-operator",
              "app.kubernetes.io/managed-by": "ibm-common-service-operator",
              "app.kubernetes.io/name": "ibm-common-service-operator"
            },
            "name": "example-commonservice"
          },
          "spec": {
            "size": 3
          }
        }
      ]
    capabilities: Basic Install
    containerImage: quay.io/opencloudio/common-service-operator:3.4
    createdAt: "2020-04-06T11:28:16Z"
    csNamespace: |-
      apiVersion: v1
      kind: Namespace
      metadata:
        name: ibm-common-services
    csOperandConfig: |-
      apiVersion: operator.ibm.com/v1alpha1
      kind: OperandConfig
      metadata:
        name: common-service
        namespace: ibm-common-services
        annotations:
          version: "2"
      spec:
        services:
        - name: ibm-metering-operator
          spec:
            metering: {}
            meteringUI: {}
            meteringReportServer: {}
            operandBindInfo: {}
            operandRequest: {}
        - name: ibm-licensing-operator
          spec:
            IBMLicensing: {}
            operandBindInfo: {}
            operandRequest: {}
        - name: ibm-mongodb-operator
          spec:
            mongoDB: {}
            operandRequest: {}
        - name: ibm-cert-manager-operator
          spec:
            certManager: {}
            issuer: {}
            certificate: {}
            clusterIssuer: {}
        - name: ibm-iam-operator
          spec:
            authentication: {}
            oidcclientwatcher: {}
            pap: {}
            policycontroller: {}
            policydecision: {}
            secretwatcher: {}
            securityonboarding: {}
            operandBindInfo: {}
            operandRequest: {}
        - name: ibm-healthcheck-operator
          spec:
            healthService: {}
        - name: ibm-commonui-operator
          spec:
            commonWebUI: {}
            operandRequest: {}
        - name: ibm-management-ingress-operator
          spec:
            managementIngress: {}
            operandBindInfo: {}
            operandRequest: {}
        - name: ibm-ingress-nginx-operator
          spec:
            nginxIngress: {}
        - name: ibm-auditlogging-operator
          spec:
            auditLogging: {}
            operandRequest: {}
        - name: ibm-catalog-ui-operator
          spec:
            catalogUI: {}
            operandRequest: {}
        - name: ibm-platform-api-operator
          spec:
            platformApi: {}
            operandRequest: {}
        - name: ibm-helm-api-operator
          spec:
            helmApi: {}
            operandRequest: {}
        - name: ibm-helm-repo-operator
          spec:
            helmRepo: {}
            operandRequest: {}
        - name: ibm-monitoring-exporters-operator
          spec:
            exporter: {}
            operandRequest: {}
        - name: ibm-monitoring-prometheusext-operator
          spec:
            prometheusExt: {}
            operandRequest: {}
        - name: ibm-monitoring-grafana-operator
          spec:
            grafana: {}
            operandRequest: {}
        - name: ibm-elastic-stack-operator
          spec:
            elasticStack: {}
            operandBindInfo: {}
            operandRequest: {}
    csOperandRegistry: |-
      apiVersion: operator.ibm.com/v1alpha1
      kind: OperandRegistry
      metadata:
        name: common-service
        namespace: ibm-common-services
        annotations:
          version: "2"
      spec:
        operators:
        - name: ibm-metering-operator
          namespace: ibm-common-services
          channel: beta
          packageName: ibm-metering-operator-app
          scope: public
          sourceName: opencloud-operators
          sourceNamespace: openshift-marketplace
        - name: ibm-licensing-operator
          namespace: ibm-common-services
          channel: beta
          packageName: ibm-licensing-operator-app
          scope: public
          sourceName: opencloud-operators
          sourceNamespace: openshift-marketplace
        - name: ibm-mongodb-operator
          namespace: ibm-common-services
          channel: beta
          packageName: ibm-mongodb-operator-app
          sourceName: opencloud-operators
          sourceNamespace: openshift-marketplace
        - name: ibm-cert-manager-operator
          namespace: ibm-common-services
          channel: beta
          packageName: ibm-cert-manager-operator
          scope: public
          sourceName: opencloud-operators
          sourceNamespace: openshift-marketplace
        - name: ibm-iam-operator
          namespace: ibm-common-services
          channel: beta
          packageName: ibm-iam-operator
          scope: public
          sourceName: opencloud-operators
          sourceNamespace: openshift-marketplace
        - name: ibm-healthcheck-operator
          namespace: ibm-common-services
          channel: beta
          packageName: ibm-healthcheck-operator-app
          scope: public
          sourceName: opencloud-operators
          sourceNamespace: openshift-marketplace
        - name: ibm-commonui-operator
          namespace: ibm-common-services
          channel: beta
          packageName: ibm-commonui-operator-app
          scope: public
          sourceName: opencloud-operators
          sourceNamespace: openshift-marketplace
        - name: ibm-management-ingress-operator
          namespace: ibm-common-services
          channel: beta
          packageName: ibm-management-ingress-operator-app
          scope: public
          sourceName: opencloud-operators
          sourceNamespace: openshift-marketplace
        - name: ibm-ingress-nginx-operator
          namespace: ibm-common-services
          channel: beta
          packageName: ibm-ingress-nginx-operator-app
          scope: public
          sourceName: opencloud-operators
          sourceNamespace: openshift-marketplace
        - name: ibm-auditlogging-operator
          namespace: ibm-common-services
          channel: beta
          packageName: ibm-auditlogging-operator-app
          scope: public
          sourceName: opencloud-operators
          sourceNamespace: openshift-marketplace
        - name: ibm-catalog-ui-operator
          namespace: ibm-common-services
          channel: beta
          packageName: ibm-catalog-ui-operator-app
          scope: public
          sourceName: opencloud-operators
          sourceNamespace: openshift-marketplace
        - name: ibm-platform-api-operator
          namespace: ibm-common-services
          channel: beta
          packageName: ibm-platform-api-operator-app
          scope: public
          sourceName: opencloud-operators
          sourceNamespace: openshift-marketplace
        - name: ibm-helm-api-operator
          namespace: ibm-common-services
          channel: beta
          packageName: ibm-helm-api-operator-app
          sourceName: opencloud-operators
          sourceNamespace: openshift-marketplace
        - name: ibm-helm-repo-operator
          namespace: ibm-common-services
          channel: beta
          packageName: ibm-helm-repo-operator-app
          sourceName: opencloud-operators
          sourceNamespace: openshift-marketplace
        - name: ibm-monitoring-exporters-operator
          namespace: ibm-common-services
          channel: beta
          packageName: ibm-monitoring-exporters-operator-app
          scope: public
          sourceName: opencloud-operators
          sourceNamespace: openshift-marketplace
        - name: ibm-monitoring-prometheusext-operator
          namespace: ibm-common-services
          channel: beta
          packageName: ibm-monitoring-prometheusext-operator-app
          scope: public
          sourceName: opencloud-operators
          sourceNamespace: openshift-marketplace
        - channel: beta
          name: ibm-monitoring-grafana-operator
          namespace: ibm-common-services
          packageName: ibm-monitoring-grafana-operator-app
          scope: public
          sourceName: opencloud-operators
          sourceNamespace: openshift-marketplace
        - channel: beta
          name: ibm-elastic-stack-operator
          namespace: ibm-common-services
          packageName: ibm-elastic-stack-operator-app
          scope: public
          sourceName: opencloud-operators
          sourceNamespace: openshift-marketplace
    description: The IBM Common Service Operator is used to deploy IBM Common Services
    extraResources: webhookCRD,webhookOperator,secretShareOperator,rbac
    odlmSubscription: |-
      apiVersion: operators.coreos.com/v1alpha1
      kind: Subscription
      metadata:
        name: operand-deployment-lifecycle-manager-app
        namespace: openshift-operators
        annotations:
          version: "2"
      spec:
        channel: beta
        installPlanApproval: Automatic
        name: operand-deployment-lifecycle-manager-app
        source: opencloud-operators
        sourceNamespace: openshift-marketplace
    olm.skipRange: '>=3.3.0 <3.4.2'
    rbac: |-
      apiVersion: rbac.authorization.k8s.io/v1
      kind: Role
      metadata:
        name: ibmcloud-cluster-info
        namespace: kube-public
      rules:
        - apiGroups: [""]
          resources: ["configmaps"]
          resourceNames: ["ibmcloud-cluster-info"]
          verbs: ["get"]

      ---
      apiVersion: rbac.authorization.k8s.io/v1
      kind: RoleBinding
      metadata:
        name: ibmcloud-cluster-info
        namespace: kube-public
      subjects:
        - kind: Group
          apiGroup: rbac.authorization.k8s.io
          name: "system:authenticated"
        - kind: Group
          apiGroup: rbac.authorization.k8s.io
          name: "system:unauthenticated"
      roleRef:
        kind: Role
        name: ibmcloud-cluster-info
        apiGroup: rbac.authorization.k8s.io

      ---
      kind: Role
      apiVersion: rbac.authorization.k8s.io/v1
      metadata:
        name: ibmcloud-cluster-ca-cert
        namespace: kube-public
      rules:
        - apiGroups: [""]
          resources: ["secrets"]
          resourceNames: ["ibmcloud-cluster-ca-cert"]
          verbs: ["get"]

      ---
      kind: RoleBinding
      apiVersion: rbac.authorization.k8s.io/v1
      metadata:
        name: ibmcloud-cluster-ca-cert
        namespace: kube-public
      subjects:
        - kind: Group
          apiGroup: rbac.authorization.k8s.io
          name: "system:authenticated"
        - kind: Group
          apiGroup: rbac.authorization.k8s.io
          name: "system:unauthenticated"
      roleRef:
        kind: Role
        name: ibmcloud-cluster-ca-cert
        apiGroup: rbac.authorization.k8s.io
    repository: https://github.com/IBM/ibm-common-service-operator
    secretShareOperator: |-
      apiVersion: apiextensions.k8s.io/v1beta1
      kind: CustomResourceDefinition
      metadata:
        name: secretshares.ibmcpcs.ibm.com
      spec:
        group: ibmcpcs.ibm.com
        names:
          kind: SecretShare
          listKind: SecretShareList
          plural: secretshares
          singular: secretshare
        scope: Namespaced
        subresources:
          status: {}
        validation:
          openAPIV3Schema:
            type: object
            x-kubernetes-preserve-unknown-fields: true
        versions:
        - name: v1
          served: true
          storage: true
      ---
      apiVersion: v1
      kind: ServiceAccount
      metadata:
        name: secretshare
        namespace: ibm-common-services
      ---
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      metadata:
        creationTimestamp: null
        name: secretshare
      rules:
      - apiGroups:
        - ""
        resources:
        - pods
        - namespaces
        - services
        - services/finalizers
        - endpoints
        - persistentvolumeclaims
        - events
        - configmaps
        - secrets
        verbs:
        - create
        - delete
        - get
        - list
        - patch
        - update
        - watch
      - apiGroups:
        - apps
        resources:
        - deployments
        - daemonsets
        - replicasets
        - statefulsets
        verbs:
        - create
        - delete
        - get
        - list
        - patch
        - update
        - watch
      - apiGroups:
        - monitoring.coreos.com
        resources:
        - servicemonitors
        verbs:
        - get
        - create
      - apiGroups:
        - apps
        resourceNames:
        - secretshare
        resources:
        - deployments/finalizers
        verbs:
        - update
        - get
        - list
        - watch
        - apiGroups:
        - ibmcpcs.ibm.com
        resources:
        - '*'
        verbs:
        - create
        - delete
        - get
        - list
        - patch
        - update
        - watch
      - apiGroups:
        - ibmcpcs.ibm.com
        resources:
        - secretshares
        - secretshares/status
        verbs:
        - create
        - delete
        - get
        - list
        - patch
        - update
        - watch
      ---
      kind: ClusterRoleBinding
      apiVersion: rbac.authorization.k8s.io/v1
      metadata:
        name: secretshare-ibm-common-services
      subjects:
      - kind: ServiceAccount
        name: secretshare
        namespace: ibm-common-services
      roleRef:
        kind: ClusterRole
        name: secretshare
        apiGroup: rbac.authorization.k8s.io
      ---
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: secretshare
        namespace: ibm-common-services
        annotations:
          version: "2"
      spec:
        replicas: 1
        selector:
          matchLabels:
            name: secretshare
        template:
          metadata:
            annotations:
              productID: 068a62892a1e4db39641342e592daa25
              productMetric: FREE
              productName: IBM Cloud Platform Common Services
              productVersion: 3.4.0
            labels:
              name: secretshare
          spec:
            serviceAccountName: secretshare
            containers:
              - name: ansible
                command:
                - /usr/local/bin/ao-logs
                - /tmp/ansible-operator/runner
                - stdout
                # Replace this with the built image name
                image: "quay.io/opencloudio/ibm-secretshare-operator@sha256:e6587d27db30e269428e85c2a7a33892051248ffa18a73c7c750f6577a8fc484"
                imagePullPolicy: "Always"
                volumeMounts:
                - mountPath: /tmp/ansible-operator/runner
                  name: runner
                  readOnly: true
                resources:
                  limits:
                    cpu: 500m
                    memory: 512Mi
                  requests:
                    cpu: 200m
                    memory: 200Mi
              - name: operator
                # Replace this with the built image name
                image: "quay.io/opencloudio/ibm-secretshare-operator@sha256:e6587d27db30e269428e85c2a7a33892051248ffa18a73c7c750f6577a8fc484"
                imagePullPolicy: "Always"
                volumeMounts:
                - mountPath: /tmp/ansible-operator/runner
                  name: runner
                env:
                  - name: WATCH_NAMESPACE
                    valueFrom:
                      fieldRef:
                        fieldPath: metadata.namespace
                  - name: POD_NAME
                    valueFrom:
                      fieldRef:
                        fieldPath: metadata.name
                  - name: OPERATOR_NAME
                    value: "secretshare"
                  - name: ANSIBLE_GATHERING
                    value: explicit
                resources:
                  limits:
                    cpu: 800m
                    memory: 1024Mi
                  requests:
                    cpu: 200m
                    memory: 200Mi
            volumes:
              - name: runner
                emptyDir: {}
      ---
      apiVersion: ibmcpcs.ibm.com/v1
      kind: SecretShare
      metadata:
        name: common-services
        namespace: ibm-common-services
      spec:
        # Secrets to share for adopter compatibility to Common Services 3.2.4
        secretshares:
        - secretname: icp-metering-api-secret
          sharewith:
          - namespace: kube-system
        - secretname: oauth-client-secret
          sharewith:
          - namespace: services
        - secretname: ibmcloud-cluster-ca-cert
          sharewith:
          - namespace: kube-public
        - secretname: icp-serviceid-apikey-secret
          sharewith:
          - namespace: kube-system
        - secretname: platform-oidc-credentials
          sharewith:
          - namespace: kube-system
        - secretname: icp-mongodb-admin
          sharewith:
          - namespace: kube-system
        - secretname: icp-mongodb-client-cert
          sharewith:
          - namespace: kube-system
        - secretname: cs-ca-certificate-secret
          sharewith:
          - namespace: kube-system
        # ConfigMaps to share for adopter compatibility to Common Services 3.2.4
        configmapshares:
        - configmapname: platform-auth-idp
          sharewith:
          - namespace: kube-system
        - configmapname: oauth-client-map
          sharewith:
          - namespace: services
        - configmapname: ibmcloud-cluster-info
          sharewith:
          - namespace: kube-public
    support: IBM
    webhookCRD: |-
      apiVersion: apiextensions.k8s.io/v1beta1
      kind: CustomResourceDefinition
      metadata:
        name: podpresets.operator.ibm.com
      spec:
        group: operator.ibm.com
        names:
          kind: PodPreset
          listKind: PodPresetList
          plural: podpresets
          singular: podpreset
        scope: Namespaced
        subresources:
          status: {}
        validation:
          openAPIV3Schema:
            description: PodPreset is the Schema for the podpresets API
            properties:
              apiVersion:
                description: 'APIVersion defines the versioned schema of this representation
                  of an object. Servers should convert recognized schemas to the latest
                  internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
                type: string
              kind:
                description: 'Kind is a string value representing the REST resource this
                  object represents. Servers may infer this from the endpoint the client
                  submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                type: string
              metadata:
                type: object
              spec:
                description: PodPresetSpec defines the desired state of PodPreset
                properties:
                  env:
                    description: Env defines the collection of EnvVar to inject into containers.
                    items:
                      description: EnvVar represents an environment variable present in
                        a Container.
                      properties:
                        name:
                          description: Name of the environment variable. Must be a C_IDENTIFIER.
                          type: string
                        value:
                          description: 'Variable references $(VAR_NAME) are expanded using
                            the previous defined environment variables in the container
                            and any service environment variables. If a variable cannot
                            be resolved, the reference in the input string will be unchanged.
                            The $(VAR_NAME) syntax can be escaped with a double $$, ie:
                            $$(VAR_NAME). Escaped references will never be expanded, regardless
                            of whether the variable exists or not. Defaults to "".'
                          type: string
                        valueFrom:
                          description: Source for the environment variable's value. Cannot
                            be used if value is not empty.
                          properties:
                            configMapKeyRef:
                              description: Selects a key of a ConfigMap.
                              properties:
                                key:
                                  description: The key to select.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind, uid?'
                                  type: string
                                optional:
                                  description: Specify whether the ConfigMap or it's key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                            fieldRef:
                              description: 'Selects a field of the pod: supports metadata.name,
                                metadata.namespace, metadata.labels, metadata.annotations,
                                spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP.'
                              properties:
                                apiVersion:
                                  description: Version of the schema the FieldPath is written
                                    in terms of, defaults to "v1".
                                  type: string
                                fieldPath:
                                  description: Path of the field to select in the specified
                                    API version.
                                  type: string
                              required:
                              - fieldPath
                              type: object
                            resourceFieldRef:
                              description: 'Selects a resource of the container: only resources
                                limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage,
                                requests.cpu, requests.memory and requests.ephemeral-storage)
                                are currently supported.'
                              properties:
                                containerName:
                                  description: 'Container name: required for volumes, optional
                                    for env vars'
                                  type: string
                                divisor:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Specifies the output format of the exposed
                                    resources, defaults to "1"
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                resource:
                                  description: 'Required: resource to select'
                                  type: string
                              required:
                              - resource
                              type: object
                            secretKeyRef:
                              description: Selects a key of a secret in the pod's namespace
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind, uid?'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or it's key must
                                    be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                          type: object
                      required:
                      - name
                      type: object
                    type: array
                  envFrom:
                    description: EnvFrom defines the collection of EnvFromSource to inject
                      into containers.
                    items:
                      description: EnvFromSource represents the source of a set of ConfigMaps
                      properties:
                        configMapRef:
                          description: The ConfigMap to select from
                          properties:
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the ConfigMap must be defined
                              type: boolean
                          type: object
                        prefix:
                          description: An optional identifier to prepend to each key in
                            the ConfigMap. Must be a C_IDENTIFIER.
                          type: string
                        secretRef:
                          description: The Secret to select from
                          properties:
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret must be defined
                              type: boolean
                          type: object
                      type: object
                    type: array
                  selector:
                    description: Selector is a label query over a set of resources, in this
                      case pods. Required.
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector requirements.
                          The requirements are ANDed.
                        items:
                          description: A label selector requirement is a selector that contains
                            values, a key, and an operator that relates the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector applies
                                to.
                              type: string
                            operator:
                              description: operator represents a key's relationship to a
                                set of values. Valid operators are In, NotIn, Exists and
                                DoesNotExist.
                              type: string
                            values:
                              description: values is an array of string values. If the operator
                                is In or NotIn, the values array must be non-empty. If the
                                operator is Exists or DoesNotExist, the values array must
                                be empty. This array is replaced during a strategic merge
                                patch.
                              items:
                                type: string
                              type: array
                          required:
                          - key
                          - operator
                          type: object
                        type: array
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: matchLabels is a map of {key,value} pairs. A single
                          {key,value} in the matchLabels map is equivalent to an element
                          of matchExpressions, whose key field is "key", the operator is
                          "In", and the values array contains only "value". The requirements
                          are ANDed.
                        type: object
                    type: object
                  volumeMounts:
                    description: VolumeMounts defines the collection of VolumeMount to inject
                      into containers.
                    items:
                      description: VolumeMount describes a mounting of a Volume within a
                        container.
                      properties:
                        mountPath:
                          description: Path within the container at which the volume should
                            be mounted.  Must not contain ':'.
                          type: string
                        mountPropagation:
                          description: mountPropagation determines how mounts are propagated
                            from the host to container and the other way around. When not
                            set, MountPropagationNone is used. This field is beta in 1.10.
                          type: string
                        name:
                          description: This must match the Name of a Volume.
                          type: string
                        readOnly:
                          description: Mounted read-only if true, read-write otherwise (false
                            or unspecified). Defaults to false.
                          type: boolean
                        subPath:
                          description: Path within the volume from which the container's
                            volume should be mounted. Defaults to "" (volume's root).
                          type: string
                      required:
                      - mountPath
                      - name
                      type: object
                    type: array
                  volumes:
                    description: Volumes defines the collection of Volume to inject into
                      the pod.
                    items:
                      description: Volume represents a named volume in a pod that may be
                        accessed by any container in the pod.
                      properties:
                        awsElasticBlockStore:
                          description: 'AWSElasticBlockStore represents an AWS Disk resource
                            that is attached to a kubelet''s host machine and then exposed
                            to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                          properties:
                            fsType:
                              description: 'Filesystem type of the volume that you want
                                to mount. Tip: Ensure that the filesystem type is supported
                                by the host operating system. Examples: "ext4", "xfs", "ntfs".
                                Implicitly inferred to be "ext4" if unspecified. More info:
                                https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                                TODO: how do we prevent errors in the filesystem from compromising
                                the machine'
                              type: string
                            partition:
                              description: 'The partition in the volume that you want to
                                mount. If omitted, the default is to mount by volume name.
                                Examples: For volume /dev/sda1, you specify the partition
                                as "1". Similarly, the volume partition for /dev/sda is
                                "0" (or you can leave the property empty).'
                              format: int32
                              type: integer
                            readOnly:
                              description: 'Specify "true" to force and set the ReadOnly
                                property in VolumeMounts to "true". If omitted, the default
                                is "false". More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                              type: boolean
                            volumeID:
                              description: 'Unique ID of the persistent disk resource in
                                AWS (Amazon EBS volume). More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                              type: string
                          required:
                          - volumeID
                          type: object
                        azureDisk:
                          description: AzureDisk represents an Azure Data Disk mount on
                            the host and bind mount to the pod.
                          properties:
                            cachingMode:
                              description: 'Host Caching mode: None, Read Only, Read Write.'
                              type: string
                            diskName:
                              description: The Name of the data disk in the blob storage
                              type: string
                            diskURI:
                              description: The URI the data disk in the blob storage
                              type: string
                            fsType:
                              description: Filesystem type to mount. Must be a filesystem
                                type supported by the host operating system. Ex. "ext4",
                                "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                              type: string
                            kind:
                              description: 'Expected values Shared: multiple blob disks
                                per storage account  Dedicated: single blob disk per storage
                                account  Managed: azure managed data disk (only in managed
                                availability set). defaults to shared'
                              type: string
                            readOnly:
                              description: Defaults to false (read/write). ReadOnly here
                                will force the ReadOnly setting in VolumeMounts.
                              type: boolean
                          required:
                          - diskName
                          - diskURI
                          type: object
                        azureFile:
                          description: AzureFile represents an Azure File Service mount
                            on the host and bind mount to the pod.
                          properties:
                            readOnly:
                              description: Defaults to false (read/write). ReadOnly here
                                will force the ReadOnly setting in VolumeMounts.
                              type: boolean
                            secretName:
                              description: the name of secret that contains Azure Storage
                                Account Name and Key
                              type: string
                            shareName:
                              description: Share Name
                              type: string
                          required:
                          - secretName
                          - shareName
                          type: object
                        cephfs:
                          description: CephFS represents a Ceph FS mount on the host that
                            shares a pod's lifetime
                          properties:
                            monitors:
                              description: 'Required: Monitors is a collection of Ceph monitors
                                More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it'
                              items:
                                type: string
                              type: array
                            path:
                              description: 'Optional: Used as the mounted root, rather than
                                the full Ceph tree, default is /'
                              type: string
                            readOnly:
                              description: 'Optional: Defaults to false (read/write). ReadOnly
                                here will force the ReadOnly setting in VolumeMounts. More
                                info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it'
                              type: boolean
                            secretFile:
                              description: 'Optional: SecretFile is the path to key ring
                                for User, default is /etc/ceph/user.secret More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it'
                              type: string
                            secretRef:
                              description: 'Optional: SecretRef is reference to the authentication
                                secret for User, default is empty. More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it'
                              properties:
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind, uid?'
                                  type: string
                              type: object
                            user:
                              description: 'Optional: User is the rados user name, default
                                is admin More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it'
                              type: string
                          required:
                          - monitors
                          type: object
                        cinder:
                          description: 'Cinder represents a cinder volume attached and mounted
                            on kubelets host machine More info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md'
                          properties:
                            fsType:
                              description: 'Filesystem type to mount. Must be a filesystem
                                type supported by the host operating system. Examples: "ext4",
                                "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                                More info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md'
                              type: string
                            readOnly:
                              description: 'Optional: Defaults to false (read/write). ReadOnly
                                here will force the ReadOnly setting in VolumeMounts. More
                                info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md'
                              type: boolean
                            secretRef:
                              description: 'Optional: points to a secret object containing
                                parameters used to connect to OpenStack.'
                              properties:
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind, uid?'
                                  type: string
                              type: object
                            volumeID:
                              description: 'volume id used to identify the volume in cinder
                                More info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md'
                              type: string
                          required:
                          - volumeID
                          type: object
                        configMap:
                          description: ConfigMap represents a configMap that should populate
                            this volume
                          properties:
                            defaultMode:
                              description: 'Optional: mode bits to use on created files
                                by default. Must be a value between 0 and 0777. Defaults
                                to 0644. Directories within the path are not affected by
                                this setting. This might be in conflict with other options
                                that affect the file mode, like fsGroup, and the result
                                can be other mode bits set.'
                              format: int32
                              type: integer
                            items:
                              description: If unspecified, each key-value pair in the Data
                                field of the referenced ConfigMap will be projected into
                                the volume as a file whose name is the key and content is
                                the value. If specified, the listed keys will be projected
                                into the specified paths, and unlisted keys will not be
                                present. If a key is specified which is not present in the
                                ConfigMap, the volume setup will error unless it is marked
                                optional. Paths must be relative and may not contain the
                                '..' path or start with '..'.
                              items:
                                description: Maps a string key to a path within a volume.
                                properties:
                                  key:
                                    description: The key to project.
                                    type: string
                                  mode:
                                    description: 'Optional: mode bits to use on this file,
                                      must be a value between 0 and 0777. If not specified,
                                      the volume defaultMode will be used. This might be
                                      in conflict with other options that affect the file
                                      mode, like fsGroup, and the result can be other mode
                                      bits set.'
                                    format: int32
                                    type: integer
                                  path:
                                    description: The relative path of the file to map the
                                      key to. May not be an absolute path. May not contain
                                      the path element '..'. May not start with the string
                                      '..'.
                                    type: string
                                required:
                                - key
                                - path
                                type: object
                              type: array
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the ConfigMap or it's keys must
                                be defined
                              type: boolean
                          type: object
                        downwardAPI:
                          description: DownwardAPI represents downward API about the pod
                            that should populate this volume
                          properties:
                            defaultMode:
                              description: 'Optional: mode bits to use on created files
                                by default. Must be a value between 0 and 0777. Defaults
                                to 0644. Directories within the path are not affected by
                                this setting. This might be in conflict with other options
                                that affect the file mode, like fsGroup, and the result
                                can be other mode bits set.'
                              format: int32
                              type: integer
                            items:
                              description: Items is a list of downward API volume file
                              items:
                                description: DownwardAPIVolumeFile represents information
                                  to create the file containing the pod field
                                properties:
                                  fieldRef:
                                    description: 'Required: Selects a field of the pod:
                                      only annotations, labels, name and namespace are supported.'
                                    properties:
                                      apiVersion:
                                        description: Version of the schema the FieldPath
                                          is written in terms of, defaults to "v1".
                                        type: string
                                      fieldPath:
                                        description: Path of the field to select in the
                                          specified API version.
                                        type: string
                                    required:
                                    - fieldPath
                                    type: object
                                  mode:
                                    description: 'Optional: mode bits to use on this file,
                                      must be a value between 0 and 0777. If not specified,
                                      the volume defaultMode will be used. This might be
                                      in conflict with other options that affect the file
                                      mode, like fsGroup, and the result can be other mode
                                      bits set.'
                                    format: int32
                                    type: integer
                                  path:
                                    description: 'Required: Path is  the relative path name
                                      of the file to be created. Must not be absolute or
                                      contain the ''..'' path. Must be utf-8 encoded. The
                                      first item of the relative path must not start with
                                      ''..'''
                                    type: string
                                  resourceFieldRef:
                                    description: 'Selects a resource of the container: only
                                      resources limits and requests (limits.cpu, limits.memory,
                                      requests.cpu and requests.memory) are currently supported.'
                                    properties:
                                      containerName:
                                        description: 'Container name: required for volumes,
                                          optional for env vars'
                                        type: string
                                      divisor:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        description: Specifies the output format of the
                                          exposed resources, defaults to "1"
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      resource:
                                        description: 'Required: resource to select'
                                        type: string
                                    required:
                                    - resource
                                    type: object
                                required:
                                - path
                                type: object
                              type: array
                          type: object
                        emptyDir:
                          description: 'EmptyDir represents a temporary directory that shares
                            a pod''s lifetime. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                          properties:
                            medium:
                              description: 'What type of storage medium should back this
                                directory. The default is "" which means to use the node''s
                                default medium. Must be an empty string (default) or Memory.
                                More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                              type: string
                            sizeLimit:
                              anyOf:
                              - type: integer
                              - type: string
                              description: 'Total amount of local storage required for this
                                EmptyDir volume. The size limit is also applicable for memory
                                medium. The maximum usage on memory medium EmptyDir would
                                be the minimum value between the SizeLimit specified here
                                and the sum of memory limits of all containers in a pod.
                                The default is nil which means that the limit is undefined.
                                More info: http://kubernetes.io/docs/user-guide/volumes#emptydir'
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                          type: object
                        fc:
                          description: FC represents a Fibre Channel resource that is attached
                            to a kubelet's host machine and then exposed to the pod.
                          properties:
                            fsType:
                              description: 'Filesystem type to mount. Must be a filesystem
                                type supported by the host operating system. Ex. "ext4",
                                "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                                TODO: how do we prevent errors in the filesystem from compromising
                                the machine'
                              type: string
                            lun:
                              description: 'Optional: FC target lun number'
                              format: int32
                              type: integer
                            readOnly:
                              description: 'Optional: Defaults to false (read/write). ReadOnly
                                here will force the ReadOnly setting in VolumeMounts.'
                              type: boolean
                            targetWWNs:
                              description: 'Optional: FC target worldwide names (WWNs)'
                              items:
                                type: string
                              type: array
                            wwids:
                              description: 'Optional: FC volume world wide identifiers (wwids)
                                Either wwids or combination of targetWWNs and lun must be
                                set, but not both simultaneously.'
                              items:
                                type: string
                              type: array
                          type: object
                        flexVolume:
                          description: FlexVolume represents a generic volume resource that
                            is provisioned/attached using an exec based plugin.
                          properties:
                            driver:
                              description: Driver is the name of the driver to use for this
                                volume.
                              type: string
                            fsType:
                              description: Filesystem type to mount. Must be a filesystem
                                type supported by the host operating system. Ex. "ext4",
                                "xfs", "ntfs". The default filesystem depends on FlexVolume
                                script.
                              type: string
                            options:
                              additionalProperties:
                                type: string
                              description: 'Optional: Extra command options if any.'
                              type: object
                            readOnly:
                              description: 'Optional: Defaults to false (read/write). ReadOnly
                                here will force the ReadOnly setting in VolumeMounts.'
                              type: boolean
                            secretRef:
                              description: 'Optional: SecretRef is reference to the secret
                                object containing sensitive information to pass to the plugin
                                scripts. This may be empty if no secret object is specified.
                                If the secret object contains more than one secret, all
                                secrets are passed to the plugin scripts.'
                              properties:
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind, uid?'
                                  type: string
                              type: object
                          required:
                          - driver
                          type: object
                        flocker:
                          description: Flocker represents a Flocker volume attached to a
                            kubelet's host machine. This depends on the Flocker control
                            service being running
                          properties:
                            datasetName:
                              description: Name of the dataset stored as metadata -> name
                                on the dataset for Flocker should be considered as deprecated
                              type: string
                            datasetUUID:
                              description: UUID of the dataset. This is unique identifier
                                of a Flocker dataset
                              type: string
                          type: object
                        gcePersistentDisk:
                          description: 'GCEPersistentDisk represents a GCE Disk resource
                            that is attached to a kubelet''s host machine and then exposed
                            to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                          properties:
                            fsType:
                              description: 'Filesystem type of the volume that you want
                                to mount. Tip: Ensure that the filesystem type is supported
                                by the host operating system. Examples: "ext4", "xfs", "ntfs".
                                Implicitly inferred to be "ext4" if unspecified. More info:
                                https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                                TODO: how do we prevent errors in the filesystem from compromising
                                the machine'
                              type: string
                            partition:
                              description: 'The partition in the volume that you want to
                                mount. If omitted, the default is to mount by volume name.
                                Examples: For volume /dev/sda1, you specify the partition
                                as "1". Similarly, the volume partition for /dev/sda is
                                "0" (or you can leave the property empty). More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                              format: int32
                              type: integer
                            pdName:
                              description: 'Unique name of the PD resource in GCE. Used
                                to identify the disk in GCE. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                              type: string
                            readOnly:
                              description: 'ReadOnly here will force the ReadOnly setting
                                in VolumeMounts. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                              type: boolean
                          required:
                          - pdName
                          type: object
                        gitRepo:
                          description: 'GitRepo represents a git repository at a particular
                            revision. DEPRECATED: GitRepo is deprecated. To provision a
                            container with a git repo, mount an EmptyDir into an InitContainer
                            that clones the repo using git, then mount the EmptyDir into
                            the Pod''s container.'
                          properties:
                            directory:
                              description: Target directory name. Must not contain or start
                                with '..'.  If '.' is supplied, the volume directory will
                                be the git repository.  Otherwise, if specified, the volume
                                will contain the git repository in the subdirectory with
                                the given name.
                              type: string
                            repository:
                              description: Repository URL
                              type: string
                            revision:
                              description: Commit hash for the specified revision.
                              type: string
                          required:
                          - repository
                          type: object
                        glusterfs:
                          description: 'Glusterfs represents a Glusterfs mount on the host
                            that shares a pod''s lifetime. More info: https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md'
                          properties:
                            endpoints:
                              description: 'EndpointsName is the endpoint name that details
                                Glusterfs topology. More info: https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod'
                              type: string
                            path:
                              description: 'Path is the Glusterfs volume path. More info:
                                https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod'
                              type: string
                            readOnly:
                              description: 'ReadOnly here will force the Glusterfs volume
                                to be mounted with read-only permissions. Defaults to false.
                                More info: https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod'
                              type: boolean
                          required:
                          - endpoints
                          - path
                          type: object
                        hostPath:
                          description: 'HostPath represents a pre-existing file or directory
                            on the host machine that is directly exposed to the container.
                            This is generally used for system agents or other privileged
                            things that are allowed to see the host machine. Most containers
                            will NOT need this. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
                            --- TODO(jonesdl) We need to restrict who can use host directory
                            mounts and who can/can not mount host directories as read/write.'
                          properties:
                            path:
                              description: 'Path of the directory on the host. If the path
                                is a symlink, it will follow the link to the real path.
                                More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
                              type: string
                            type:
                              description: 'Type for HostPath Volume Defaults to "" More
                                info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
                              type: string
                          required:
                          - path
                          type: object
                        iscsi:
                          description: 'ISCSI represents an ISCSI Disk resource that is
                            attached to a kubelet''s host machine and then exposed to the
                            pod. More info: https://releases.k8s.io/HEAD/examples/volumes/iscsi/README.md'
                          properties:
                            chapAuthDiscovery:
                              description: whether support iSCSI Discovery CHAP authentication
                              type: boolean
                            chapAuthSession:
                              description: whether support iSCSI Session CHAP authentication
                              type: boolean
                            fsType:
                              description: 'Filesystem type of the volume that you want
                                to mount. Tip: Ensure that the filesystem type is supported
                                by the host operating system. Examples: "ext4", "xfs", "ntfs".
                                Implicitly inferred to be "ext4" if unspecified. More info:
                                https://kubernetes.io/docs/concepts/storage/volumes#iscsi
                                TODO: how do we prevent errors in the filesystem from compromising
                                the machine'
                              type: string
                            initiatorName:
                              description: Custom iSCSI Initiator Name. If initiatorName
                                is specified with iscsiInterface simultaneously, new iSCSI
                                interface <target portal>:<volume name> will be created
                                for the connection.
                              type: string
                            iqn:
                              description: Target iSCSI Qualified Name.
                              type: string
                            iscsiInterface:
                              description: iSCSI Interface Name that uses an iSCSI transport.
                                Defaults to 'default' (tcp).
                              type: string
                            lun:
                              description: iSCSI Target Lun number.
                              format: int32
                              type: integer
                            portals:
                              description: iSCSI Target Portal List. The portal is either
                                an IP or ip_addr:port if the port is other than default
                                (typically TCP ports 860 and 3260).
                              items:
                                type: string
                              type: array
                            readOnly:
                              description: ReadOnly here will force the ReadOnly setting
                                in VolumeMounts. Defaults to false.
                              type: boolean
                            secretRef:
                              description: CHAP Secret for iSCSI target and initiator authentication
                              properties:
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind, uid?'
                                  type: string
                              type: object
                            targetPortal:
                              description: iSCSI Target Portal. The Portal is either an
                                IP or ip_addr:port if the port is other than default (typically
                                TCP ports 860 and 3260).
                              type: string
                          required:
                          - iqn
                          - lun
                          - targetPortal
                          type: object
                        name:
                          description: 'Volume''s name. Must be a DNS_LABEL and unique within
                            the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        nfs:
                          description: 'NFS represents an NFS mount on the host that shares
                            a pod''s lifetime More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                          properties:
                            path:
                              description: 'Path that is exported by the NFS server. More
                                info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                              type: string
                            readOnly:
                              description: 'ReadOnly here will force the NFS export to be
                                mounted with read-only permissions. Defaults to false. More
                                info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                              type: boolean
                            server:
                              description: 'Server is the hostname or IP address of the
                                NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                              type: string
                          required:
                          - path
                          - server
                          type: object
                        persistentVolumeClaim:
                          description: 'PersistentVolumeClaimVolumeSource represents a reference
                            to a PersistentVolumeClaim in the same namespace. More info:
                            https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                          properties:
                            claimName:
                              description: 'ClaimName is the name of a PersistentVolumeClaim
                                in the same namespace as the pod using this volume. More
                                info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                              type: string
                            readOnly:
                              description: Will force the ReadOnly setting in VolumeMounts.
                                Default false.
                              type: boolean
                          required:
                          - claimName
                          type: object
                        photonPersistentDisk:
                          description: PhotonPersistentDisk represents a PhotonController
                            persistent disk attached and mounted on kubelets host machine
                          properties:
                            fsType:
                              description: Filesystem type to mount. Must be a filesystem
                                type supported by the host operating system. Ex. "ext4",
                                "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                              type: string
                            pdID:
                              description: ID that identifies Photon Controller persistent
                                disk
                              type: string
                          required:
                          - pdID
                          type: object
                        portworxVolume:
                          description: PortworxVolume represents a portworx volume attached
                            and mounted on kubelets host machine
                          properties:
                            fsType:
                              description: FSType represents the filesystem type to mount
                                Must be a filesystem type supported by the host operating
                                system. Ex. "ext4", "xfs". Implicitly inferred to be "ext4"
                                if unspecified.
                              type: string
                            readOnly:
                              description: Defaults to false (read/write). ReadOnly here
                                will force the ReadOnly setting in VolumeMounts.
                              type: boolean
                            volumeID:
                              description: VolumeID uniquely identifies a Portworx volume
                              type: string
                          required:
                          - volumeID
                          type: object
                        projected:
                          description: Items for all in one resources secrets, configmaps,
                            and downward API
                          properties:
                            defaultMode:
                              description: Mode bits to use on created files by default.
                                Must be a value between 0 and 0777. Directories within the
                                path are not affected by this setting. This might be in
                                conflict with other options that affect the file mode, like
                                fsGroup, and the result can be other mode bits set.
                              format: int32
                              type: integer
                            sources:
                              description: list of volume projections
                              items:
                                description: Projection that may be projected along with
                                  other supported volume types
                                properties:
                                  configMap:
                                    description: information about the configMap data to
                                      project
                                    properties:
                                      items:
                                        description: If unspecified, each key-value pair
                                          in the Data field of the referenced ConfigMap
                                          will be projected into the volume as a file whose
                                          name is the key and content is the value. If specified,
                                          the listed keys will be projected into the specified
                                          paths, and unlisted keys will not be present.
                                          If a key is specified which is not present in
                                          the ConfigMap, the volume setup will error unless
                                          it is marked optional. Paths must be relative
                                          and may not contain the '..' path or start with
                                          '..'.
                                        items:
                                          description: Maps a string key to a path within
                                            a volume.
                                          properties:
                                            key:
                                              description: The key to project.
                                              type: string
                                            mode:
                                              description: 'Optional: mode bits to use on
                                                this file, must be a value between 0 and
                                                0777. If not specified, the volume defaultMode
                                                will be used. This might be in conflict
                                                with other options that affect the file
                                                mode, like fsGroup, and the result can be
                                                other mode bits set.'
                                              format: int32
                                              type: integer
                                            path:
                                              description: The relative path of the file
                                                to map the key to. May not be an absolute
                                                path. May not contain the path element '..'.
                                                May not start with the string '..'.
                                              type: string
                                          required:
                                          - key
                                          - path
                                          type: object
                                        type: array
                                      name:
                                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion, kind,
                                          uid?'
                                        type: string
                                      optional:
                                        description: Specify whether the ConfigMap or it's
                                          keys must be defined
                                        type: boolean
                                    type: object
                                  downwardAPI:
                                    description: information about the downwardAPI data
                                      to project
                                    properties:
                                      items:
                                        description: Items is a list of DownwardAPIVolume
                                          file
                                        items:
                                          description: DownwardAPIVolumeFile represents
                                            information to create the file containing the
                                            pod field
                                          properties:
                                            fieldRef:
                                              description: 'Required: Selects a field of
                                                the pod: only annotations, labels, name
                                                and namespace are supported.'
                                              properties:
                                                apiVersion:
                                                  description: Version of the schema the
                                                    FieldPath is written in terms of, defaults
                                                    to "v1".
                                                  type: string
                                                fieldPath:
                                                  description: Path of the field to select
                                                    in the specified API version.
                                                  type: string
                                              required:
                                              - fieldPath
                                              type: object
                                            mode:
                                              description: 'Optional: mode bits to use on
                                                this file, must be a value between 0 and
                                                0777. If not specified, the volume defaultMode
                                                will be used. This might be in conflict
                                                with other options that affect the file
                                                mode, like fsGroup, and the result can be
                                                other mode bits set.'
                                              format: int32
                                              type: integer
                                            path:
                                              description: 'Required: Path is  the relative
                                                path name of the file to be created. Must
                                                not be absolute or contain the ''..'' path.
                                                Must be utf-8 encoded. The first item of
                                                the relative path must not start with ''..'''
                                              type: string
                                            resourceFieldRef:
                                              description: 'Selects a resource of the container:
                                                only resources limits and requests (limits.cpu,
                                                limits.memory, requests.cpu and requests.memory)
                                                are currently supported.'
                                              properties:
                                                containerName:
                                                  description: 'Container name: required
                                                    for volumes, optional for env vars'
                                                  type: string
                                                divisor:
                                                  anyOf:
                                                  - type: integer
                                                  - type: string
                                                  description: Specifies the output format
                                                    of the exposed resources, defaults to
                                                    "1"
                                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                  x-kubernetes-int-or-string: true
                                                resource:
                                                  description: 'Required: resource to select'
                                                  type: string
                                              required:
                                              - resource
                                              type: object
                                          required:
                                          - path
                                          type: object
                                        type: array
                                    type: object
                                  secret:
                                    description: information about the secret data to project
                                    properties:
                                      items:
                                        description: If unspecified, each key-value pair
                                          in the Data field of the referenced Secret will
                                          be projected into the volume as a file whose name
                                          is the key and content is the value. If specified,
                                          the listed keys will be projected into the specified
                                          paths, and unlisted keys will not be present.
                                          If a key is specified which is not present in
                                          the Secret, the volume setup will error unless
                                          it is marked optional. Paths must be relative
                                          and may not contain the '..' path or start with
                                          '..'.
                                        items:
                                          description: Maps a string key to a path within
                                            a volume.
                                          properties:
                                            key:
                                              description: The key to project.
                                              type: string
                                            mode:
                                              description: 'Optional: mode bits to use on
                                                this file, must be a value between 0 and
                                                0777. If not specified, the volume defaultMode
                                                will be used. This might be in conflict
                                                with other options that affect the file
                                                mode, like fsGroup, and the result can be
                                                other mode bits set.'
                                              format: int32
                                              type: integer
                                            path:
                                              description: The relative path of the file
                                                to map the key to. May not be an absolute
                                                path. May not contain the path element '..'.
                                                May not start with the string '..'.
                                              type: string
                                          required:
                                          - key
                                          - path
                                          type: object
                                        type: array
                                      name:
                                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion, kind,
                                          uid?'
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or its key
                                          must be defined
                                        type: boolean
                                    type: object
                                  serviceAccountToken:
                                    description: information about the serviceAccountToken
                                      data to project
                                    properties:
                                      audience:
                                        description: Audience is the intended audience of
                                          the token. A recipient of a token must identify
                                          itself with an identifier specified in the audience
                                          of the token, and otherwise should reject the
                                          token. The audience defaults to the identifier
                                          of the apiserver.
                                        type: string
                                      expirationSeconds:
                                        description: ExpirationSeconds is the requested
                                          duration of validity of the service account token.
                                          As the token approaches expiration, the kubelet
                                          volume plugin will proactively rotate the service
                                          account token. The kubelet will start trying to
                                          rotate the token if the token is older than 80
                                          percent of its time to live or if the token is
                                          older than 24 hours.Defaults to 1 hour and must
                                          be at least 10 minutes.
                                        format: int64
                                        type: integer
                                      path:
                                        description: Path is the path relative to the mount
                                          point of the file to project the token into.
                                        type: string
                                    required:
                                    - path
                                    type: object
                                type: object
                              type: array
                          required:
                          - sources
                          type: object
                        quobyte:
                          description: Quobyte represents a Quobyte mount on the host that
                            shares a pod's lifetime
                          properties:
                            group:
                              description: Group to map volume access to Default is no group
                              type: string
                            readOnly:
                              description: ReadOnly here will force the Quobyte volume to
                                be mounted with read-only permissions. Defaults to false.
                              type: boolean
                            registry:
                              description: Registry represents a single or multiple Quobyte
                                Registry services specified as a string as host:port pair
                                (multiple entries are separated with commas) which acts
                                as the central registry for volumes
                              type: string
                            user:
                              description: User to map volume access to Defaults to serivceaccount
                                user
                              type: string
                            volume:
                              description: Volume is a string that references an already
                                created Quobyte volume by name.
                              type: string
                          required:
                          - registry
                          - volume
                          type: object
                        rbd:
                          description: 'RBD represents a Rados Block Device mount on the
                            host that shares a pod''s lifetime. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md'
                          properties:
                            fsType:
                              description: 'Filesystem type of the volume that you want
                                to mount. Tip: Ensure that the filesystem type is supported
                                by the host operating system. Examples: "ext4", "xfs", "ntfs".
                                Implicitly inferred to be "ext4" if unspecified. More info:
                                https://kubernetes.io/docs/concepts/storage/volumes#rbd
                                TODO: how do we prevent errors in the filesystem from compromising
                                the machine'
                              type: string
                            image:
                              description: 'The rados image name. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it'
                              type: string
                            keyring:
                              description: 'Keyring is the path to key ring for RBDUser.
                                Default is /etc/ceph/keyring. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it'
                              type: string
                            monitors:
                              description: 'A collection of Ceph monitors. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it'
                              items:
                                type: string
                              type: array
                            pool:
                              description: 'The rados pool name. Default is rbd. More info:
                                https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it'
                              type: string
                            readOnly:
                              description: 'ReadOnly here will force the ReadOnly setting
                                in VolumeMounts. Defaults to false. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it'
                              type: boolean
                            secretRef:
                              description: 'SecretRef is name of the authentication secret
                                for RBDUser. If provided overrides keyring. Default is nil.
                                More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it'
                              properties:
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind, uid?'
                                  type: string
                              type: object
                            user:
                              description: 'The rados user name. Default is admin. More
                                info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it'
                              type: string
                          required:
                          - image
                          - monitors
                          type: object
                        scaleIO:
                          description: ScaleIO represents a ScaleIO persistent volume attached
                            and mounted on Kubernetes nodes.
                          properties:
                            fsType:
                              description: Filesystem type to mount. Must be a filesystem
                                type supported by the host operating system. Ex. "ext4",
                                "xfs", "ntfs". Default is "xfs".
                              type: string
                            gateway:
                              description: The host address of the ScaleIO API Gateway.
                              type: string
                            protectionDomain:
                              description: The name of the ScaleIO Protection Domain for
                                the configured storage.
                              type: string
                            readOnly:
                              description: Defaults to false (read/write). ReadOnly here
                                will force the ReadOnly setting in VolumeMounts.
                              type: boolean
                            secretRef:
                              description: SecretRef references to the secret for ScaleIO
                                user and other sensitive information. If this is not provided,
                                Login operation will fail.
                              properties:
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind, uid?'
                                  type: string
                              type: object
                            sslEnabled:
                              description: Flag to enable/disable SSL communication with
                                Gateway, default false
                              type: boolean
                            storageMode:
                              description: Indicates whether the storage for a volume should
                                be ThickProvisioned or ThinProvisioned. Default is ThinProvisioned.
                              type: string
                            storagePool:
                              description: The ScaleIO Storage Pool associated with the
                                protection domain.
                              type: string
                            system:
                              description: The name of the storage system as configured
                                in ScaleIO.
                              type: string
                            volumeName:
                              description: The name of a volume already created in the ScaleIO
                                system that is associated with this volume source.
                              type: string
                          required:
                          - gateway
                          - secretRef
                          - system
                          type: object
                        secret:
                          description: 'Secret represents a secret that should populate
                            this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret'
                          properties:
                            defaultMode:
                              description: 'Optional: mode bits to use on created files
                                by default. Must be a value between 0 and 0777. Defaults
                                to 0644. Directories within the path are not affected by
                                this setting. This might be in conflict with other options
                                that affect the file mode, like fsGroup, and the result
                                can be other mode bits set.'
                              format: int32
                              type: integer
                            items:
                              description: If unspecified, each key-value pair in the Data
                                field of the referenced Secret will be projected into the
                                volume as a file whose name is the key and content is the
                                value. If specified, the listed keys will be projected into
                                the specified paths, and unlisted keys will not be present.
                                If a key is specified which is not present in the Secret,
                                the volume setup will error unless it is marked optional.
                                Paths must be relative and may not contain the '..' path
                                or start with '..'.
                              items:
                                description: Maps a string key to a path within a volume.
                                properties:
                                  key:
                                    description: The key to project.
                                    type: string
                                  mode:
                                    description: 'Optional: mode bits to use on this file,
                                      must be a value between 0 and 0777. If not specified,
                                      the volume defaultMode will be used. This might be
                                      in conflict with other options that affect the file
                                      mode, like fsGroup, and the result can be other mode
                                      bits set.'
                                    format: int32
                                    type: integer
                                  path:
                                    description: The relative path of the file to map the
                                      key to. May not be an absolute path. May not contain
                                      the path element '..'. May not start with the string
                                      '..'.
                                    type: string
                                required:
                                - key
                                - path
                                type: object
                              type: array
                            optional:
                              description: Specify whether the Secret or it's keys must
                                be defined
                              type: boolean
                            secretName:
                              description: 'Name of the secret in the pod''s namespace to
                                use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret'
                              type: string
                          type: object
                        storageos:
                          description: StorageOS represents a StorageOS volume attached
                            and mounted on Kubernetes nodes.
                          properties:
                            fsType:
                              description: Filesystem type to mount. Must be a filesystem
                                type supported by the host operating system. Ex. "ext4",
                                "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                              type: string
                            readOnly:
                              description: Defaults to false (read/write). ReadOnly here
                                will force the ReadOnly setting in VolumeMounts.
                              type: boolean
                            secretRef:
                              description: SecretRef specifies the secret to use for obtaining
                                the StorageOS API credentials.  If not specified, default
                                values will be attempted.
                              properties:
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind, uid?'
                                  type: string
                              type: object
                            volumeName:
                              description: VolumeName is the human-readable name of the
                                StorageOS volume.  Volume names are only unique within a
                                namespace.
                              type: string
                            volumeNamespace:
                              description: VolumeNamespace specifies the scope of the volume
                                within StorageOS.  If no namespace is specified then the
                                Pod's namespace will be used.  This allows the Kubernetes
                                name scoping to be mirrored within StorageOS for tighter
                                integration. Set VolumeName to any name to override the
                                default behaviour. Set to "default" if you are not using
                                namespaces within StorageOS. Namespaces that do not pre-exist
                                within StorageOS will be created.
                              type: string
                          type: object
                        vsphereVolume:
                          description: VsphereVolume represents a vSphere volume attached
                            and mounted on kubelets host machine
                          properties:
                            fsType:
                              description: Filesystem type to mount. Must be a filesystem
                                type supported by the host operating system. Ex. "ext4",
                                "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                              type: string
                            storagePolicyID:
                              description: Storage Policy Based Management (SPBM) profile
                                ID associated with the StoragePolicyName.
                              type: string
                            storagePolicyName:
                              description: Storage Policy Based Management (SPBM) profile
                                name.
                              type: string
                            volumePath:
                              description: Path that identifies vSphere volume vmdk
                              type: string
                          required:
                          - volumePath
                          type: object
                      required:
                      - name
                      type: object
                    type: array
                type: object
            type: object
        version: v1alpha1
        versions:
        - name: v1alpha1
          served: true
          storage: true
    webhookOperator: |-
      apiVersion: v1
      kind: ServiceAccount
      metadata:
        name: ibm-common-service-webhook
        namespace: ibm-common-services
      ---
      apiVersion: rbac.authorization.k8s.io/v1
      kind: Role
      metadata:
        name: ibm-common-service-webhook
        namespace: ibm-common-services
      rules:
      - apiGroups:
        - ""
        resources:
        - pods
        - services
        - services/finalizers
        - endpoints
        - persistentvolumeclaims
        - events
        - configmaps
        - secrets
        verbs:
        - create
        - delete
        - get
        - list
        - patch
        - update
        - watch
      - apiGroups:
        - apps
        resources:
        - deployments
        - daemonsets
        - replicasets
        - statefulsets
        verbs:
        - create
        - delete
        - get
        - list
        - patch
        - update
        - watch
      - apiGroups:
        - monitoring.coreos.com
        resources:
        - servicemonitors
        verbs:
        - get
        - create
      - apiGroups:
        - apps
        resourceNames:
        - ibm-common-service-webhook
        resources:
        - deployments/finalizers
        verbs:
        - update
      - apiGroups:
        - ""
        resources:
        - pods
        verbs:
        - get
      - apiGroups:
        - apps
        resources:
        - replicasets
        - deployments
        verbs:
        - get
      - apiGroups:
        - operator.ibm.com
        resources:
        - '*'
        verbs:
        - create
        - delete
        - get
        - list
        - patch
        - update
        - watch
      ---
      kind: RoleBinding
      apiVersion: rbac.authorization.k8s.io/v1
      metadata:
        name: ibm-common-service-webhook
        namespace: ibm-common-services
      subjects:
      - kind: ServiceAccount
        name: ibm-common-service-webhook
      roleRef:
        kind: Role
        name: ibm-common-service-webhook
        apiGroup: rbac.authorization.k8s.io
      ---
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      metadata:
        name: ibm-common-service-webhook
      rules:
        - apiGroups:
            - ""
          resources:
            - pods
          verbs:
            - list
            - get
            - create
        - apiGroups:
            - operator.ibm.com
          resources:
            - '*'
          verbs:
            - create
            - delete
            - get
            - list
            - patch
            - update
            - watch
        - apiGroups:
            - admissionregistration.k8s.io
          resources:
            - mutatingwebhookconfigurations
          verbs:
            - "*"
      ---
      kind: ClusterRoleBinding
      apiVersion: rbac.authorization.k8s.io/v1
      metadata:
        name: ibm-common-service-webhook
      subjects:
        - kind: ServiceAccount
          name: ibm-common-service-webhook
          namespace: ibm-common-services
      roleRef:
        kind: ClusterRole
        name: ibm-common-service-webhook
        apiGroup: rbac.authorization.k8s.io
      ---
      apiVersion: v1
      kind: Secret
      metadata:
        name: ibm-common-service-webhook-cert
        namespace: ibm-common-services
      ---
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: ibm-common-service-webhook
        namespace: ibm-common-services
        annotations:
          version: "2"
      spec:
        replicas: 1
        selector:
          matchLabels:
            name: ibm-common-service-webhook
        template:
          metadata:
            annotations:
              productID: 068a62892a1e4db39641342e592daa25
              productMetric: FREE
              productName: IBM Cloud Platform Common Services
              productVersion: 3.4.0
            labels:
              name: ibm-common-service-webhook
          spec:
            serviceAccountName: ibm-common-service-webhook
            containers:
              - name: ibm-common-service-webhook
                image: quay.io/opencloudio/ibm-cs-webhook@sha256:3e03c060166bb5df5afa206e7d32b664243d16931dea0545b01d06909bb60e96
                command:
                - ibm-common-service-webhook
                imagePullPolicy: Always
                env:
                  - name: WATCH_NAMESPACE
                    valueFrom:
                      fieldRef:
                        fieldPath: metadata.namespace
                  - name: POD_NAME
                    valueFrom:
                      fieldRef:
                        fieldPath: metadata.name
                  - name: OPERATOR_NAME
                    value: "ibm-common-service-webhook"
                ports:
                  - containerPort: 8443
                    protocol: TCP
                resources:
                  limits:
                    cpu: 200m
                    memory: 256Mi
                  requests:
                    cpu: 200m
                    memory: 256Mi
                volumeMounts:
                  - mountPath: /tmp/cert
                    name: cert
                    readOnly: true
            volumes:
              - name: cert
                secret:
                  defaultMode: 420
                  secretName: ibm-common-service-webhook-cert
      ---
      apiVersion: operator.ibm.com/v1alpha1
      kind: PodPreset
      metadata:
        name: ibm-common-service-webhook
        namespace: ibm-common-services
      spec: {}
  name: ibm-common-service-operator.v3.4.2
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - description: CommonService is the Schema for the commonservices API
      displayName: CommonService
      kind: CommonService
      name: commonservices.operator.ibm.com
      version: v3
  description: |-
    The `ibm-common-service-operator` is a bridge to connect IBM Cloud Paks and Operand Deployment Lifecycle Manager (ODLM) with IBM Cloud Platform Common Services. You can also install the `ibm-common-service-operator` in stand-alone mode.

    When you install this operator, the operator completes the following tasks:

      - Installs ODLM in all namespaces mode
      - Creates the `ibm-common-services` namespace
      - Creates the Common Services `OperandRegistry` and `OperandConfig` in the `ibm-common-services` namespace

    For more information about installing this operator and other Common Services operators, see [Installer documentation](http://ibm.biz/cpcs_opinstall). If you are using this operator as part of an IBM Cloud Pak, see the documentation for that IBM Cloud Pak to learn more about how to install and use the operator service. For more information about IBM Cloud Paks, see [IBM Cloud Paks that use Common Services](http://ibm.biz/cpcs_cloudpaks).

    For more information about the available IBM Cloud Platform Common Services, see the [IBM Knowledge Center](http://ibm.biz/cpcsdocs).

    ## Supported platforms

    Red Hat OpenShift Container Platform 4.3 or newer installed on one of the following platforms:

     - Linux x86_64
     - Linux on Power (ppc64le)
     - Linux on IBM Z and LinuxONE

    ## Operator versions

     - 3.4.2

    ## Prerequisites

    Before you install this operator, you need to first install the operator prerequisites:

    - For the list of prerequisites for installing the operator, see the IBM Knowledge Center [Preparing to install services documentation](http://ibm.biz/cpcs_opinstprereq).

    ## Documentation

    - If you are using the operator as part of an IBM Cloud Pak, see the documentation for that IBM Cloud Pak. For a list of IBM Cloud Paks, see [IBM Cloud Paks that use Common Services](http://ibm.biz/cpcs_cloudpaks).
    - If you are using the operator in stand-alone mode or with an IBM Containerized Software, see the IBM Cloud Platform Common Services Knowledge Center [Installer documentation](http://ibm.biz/cpcs_opinstall).
  displayName: IBM Common Service Operator
  icon:
  - base64data: iVBORw0KGgoAAAANSUhEUgAAAK8AAACvCAMAAAC8TH5HAAAABGdBTUEAALGPC/xhBQAAAAFzUkdCAK7OHOkAAAB1UExURQAAAJGS77CC4pCS75yM64uV8pSQ7puA85OV87OB4auF5Hyd+H2c936b9n6b94Ca9n+b9n+b9n+b9qOJ56SI55yM6qSI536b96aH5q2D45mN64OZ9ZWQ7oyU8XWg+6uG5oqg/p6L6m+k/ZuY+3mr/6qQ9LqM80D8C0oAAAAbdFJOUwA67R4KKxMBBP6ak6vZgVtJxG5ot+hQ7YDVkwC2C58AAAuSSURBVHja7ZyJerK8EoCDCSTKjoiIS13of/+XeGYm4NLKrvj1OYxt7aa8TiazJZGxSSaZZJJJJvmcSCn/Eq7Cz79DLJk0rb+kXdM9nz0m/4p2mZufz3lAZvEn1HsGye2J9128h7/Gezj8Nd7D3+I9/xu8SjWHrS76bfN8A+NsYxjowCvbPN+QSGB6kWi6QHteyQLPfx+wYsH2eHSthgu05lXMy/PceRcwxtnjdnts4mjLq5hBceVdcVsya71FMeov0JIXMuQwR+DoXX5EMgf0uz2GrDYbb8mrmE+4Z/NdvDCApN+jX3uFdrySqfW70wzFbFLwWtVNkXa8ONlIvfx9Dk0xSyvYq0NpxasYJ9o8emcUVCw6EjGvuUpLXgfVm9cP1fAZp1yyCKeGBf8pB96g9jUZ57c6s1vIIAUfjXqY9eFg1yiuKJnOECzeW+TJm0+rxRGGWfcP7/dld8bZwqcp/dJqIs9hrJIJ/JD2abV5j1StfJn1/pofo/Kx0ae1KfAO7/Vld7anfVpf28M5kKPDc9kYLRW4RDhIwYV/PozVUAF39Qre3BmrvsM04nisjHHyJlUjZEOefuBj8UIA81zHfGJ84BYeHAP9LKseP1r5LNnvOlHeXJgqRZbUPzT97PHvBVb48VCX09W54du2u3ZJwjD0It/gqmCue/yoolm4b7tQjmohh7cGAWzHC8x/qOFOZmBG4bbERDkQrVYyiGP7iPwPLGrgsAofYbePonEJ2CHxAuvjxEjLvfUj7J1BaP0irY3i888SA63l3alWgwKjbXueZztOSBoucOE33huIZdsWHChXRds72O069PyHhSEBDiOynbAEBiGreCGJKoa5zT8GVBzt4QNgXc+wbq4YvW+hSMkDYNa4EYihWqlYtmouSsYTo4XvgWezHKDcI+7xuPbMMp7JH0GEfhZGRMDIG5FRtLG1IGCNvTp/d9nFZhMx/DXYH/cgSBv6SscM+Tyf0P450Lw+iCmbOGAMonOeO/XlMyTjgAsfmWAN9Y53RFy0hDAovXBDSBFBVAIHDdUJ2lre3J6AVG9Hcln5NQyKCUcrd390g5/BtjpNR2KNGwTVpRDSmk6et6jwCv0ScVhpxopxl3DBIjzVjrYk5gVuEPAaw7UP+aFV+0ex5Aq8y/hTYhiE/UXjhibrlBUisUm8hmHwqujuH3IqQLA/0dT+Af8Q34hT8du3QXlR4nrdkxhJ0554nwAXhpvj+hLUo2u/zWoJM1aXy70ZP8e97APWJ+WGbN1AXNP8tedAasM96PLu4Ik2jhpHZLkqgdGM5TNjuKzNnhkiUmneH8CSCe9wpXV429HDlCu7GcV9JwemWoEbWr3rGZx2iMs5F4+T3S1p89DoYGvkUeLCKC67m+uBsVwVuGpI+QVohGtZ6rHrU+Cu/UaP/ps4KY3iWhlipwNwd4Arh1WLCIy4lpA/2yiF4XZ9ehgMuaRgt7r6FMWiC9DuL64YWtyCrQKuEOLe1iJsG+eO2W8eo+POdrvVtdULrgG0Dbg76xW1uCDcm5GCguzDAeNlz0qPqgfzGunJeAl4aOug6KYQ7l2WhI7DZEMqZ7L5a1uBZWTQF3/QVHvmUosOBX0ZVkbfkgNtDYCbDcDVsIKbQYCJBCY/gak7FHQh+bqiX7LwsnuYfr1gqUTCUsPWgsWdF1H2I1/ZoYBMSLs3o3/blyke+FRiEPE9c1Huq9dpV60GWQNmvybSIrCnee0SGIlDJzJfVzwrttTq7bfkUNCSzV71a19pScNOGHrmi9pWV/Uue6lXYpEcBFfgslSOPG0MBTASc/YK3455PEqvyYY5r0G4AeH6gWHqSCyVxQ2s9ksJw9B/ATBYVUy8fdRL6ZhhlPo1HpIyHelM38OmCuA6oWvzwTah69DTbiW6qxdMCdPdAIGLbrC8lyIimxHRgrhQcA+cdoqluxXc0u7qhcTGNBAYeKkB9CTASfJjVuTo7mvoRsO676Ci+LRanVbd91YgLggp2GI1/kpRq7MAXnuDjBhC8Qpkl3UepwIXgblseDQq2XBcUK8bru0hGgbni7ynzrMNs1xOuJDmNQMAsfAI2B0CjOaAvKuuK2aES8C8XU8Sn98H9SKw12/SwfwVzNyArOLOL1lxEpO37/lKFujlpW3UfTSZwpxaQCkXb+JVd3OAAg1xrQ4vFGzC0MDrbuvLSGtRiSVYuonjeNU5MxMWAVudZzct1azdLmUXzGZLV7BCySxG6Zrq4MsFXqv79A7WiLu1OwwLFgElr7VA3LQjLtZnCCx7+KNo7a4BuG3lhRmKWXQ0LME40Gbxsqt6BQH3arExZ+viCl67Ib1rGHFLQPIQL7JFnHTjRfUCb68whR1mXM3dttpjcWvIAS6uNCRxlmVxxypeCVJw3wjl0/LzmrfaVG4kBgFT6ge57wJ4M7OTfmlNS4j+McpB4G2rTfBGkhAwp2UcWfB2cw/FFogBKQvxrhtTLMnMZYJiFG4eeLM0zVLRg3dIzmJvAbfRgiXjS81rXfeBLIE3TTuVQneZeH8Fb4HXFQ0rcGKJcsNFXsRdduYdViSQBQNy0LCilaSIu+R3TeqP8KKLQAXXzjgw3hR5l3erFvoldOOVr9Cv5eK6v1tzXch0UZfLNGEPvGQi3fU7tMi1m45PgCtb4Nin974Lftmd9yUtJZ94q/NgUG9KvA9rWOjgwKATMTqv3mpcbcDgQxaLRbpYyp+89/5tLMF98GTAVZsP4LfpAuXRYnALBwof+0AxejR0EVVpO4ARbvpz96D1GV7FvNoJB4lNDLiQOKofIQSTicQcnzeq5ZUsxTpi8ctQJeVrJmNj8wbEWxHhYNxjXff8UiT1vww1Oq9R59Dgz1gGb5Kff5a62jA/4tD222Ml75J4zd+8uglmfcQB76s2nktsM2w2z8p2yamWG90eTNrd9ly/ALnAtlP8LO5a1FdSo9sv7h3cVvGqGHkXT9Sr+3ZcjO4faNNYUMErkHf2tIeuqBNhjc0bHXEDoVHBa20qeRm1liw1Mq9H29z68Ard+hs7f0BzWD/3S8g7q+TV3RohR8VVLqq34pgR2G8NL9O8alx3Rrvy7Cr3q2LkXTyPClrBY55JgPqCthFGVbxsgbxxRd2jxKCGTS/zpelW0beD8pB4NxVhVw7t2HSvj0m9lfUx5A/zzWw2q0yPHzYHjWEOuDXvWLnhAtL1Gah3XrWsImkL/WjAkoX7au+r00bQ7my+qFr4ekETpFvyUGsOKOAgZrNNZaE2InCx9XF/qVmFQwNGBVevs42n31K9+5oqFxw0GURc22UayXjBenHrY1Z7UJ/FpOCkRsFjWe+SNsLuef2xCm0QMfvwe60pxnGf5v7iNTR/xWZWb8GjWcOFgBtK3FLBM+uTCpatd5aigue1Pngs4yVcp8VphmT+YYuQGIhxm/Fu37w+j0mPBk4+BIy4ett8q52lGJTneJsbHwHGwx/FQYp2Q6wtogCWH8DNLtdt0S1Pi6RICx8JG1nFCluOV9yWLgrrjAI4HfVQNtYu5emw9ri0EyZGWpCNORYxvVuAGZeHgLIuEVZB5UnAqGLryfsLvDx31Gfa6czSSW+D7XRFVZgEyizlRfEm3yJFSaiM+HQ5Ee5ll3SNVgCczkvi+SJ5c+PMMtIV0BLu6RL32P8Lry8pcVHJcZoYlniDcCNJ49Xp+/uk5QK20PP0kLWYP8qsg2zuvl/VyAlQS1bQ7SnjfQ814O7WeF4jX/P/5l//fT2V77svePeNd/gFNam/FN/eZPd9io0B/ojOwMWVsA8/wO1RZvc/nOgTbqfi7okAfDbUe+KDjcVsPq9X81eJPK/g/So476kfWUG1S6vjmcIqYpGkGwT7r4t8FfffdIP7ajmdNlnC2Qto2fWNtixjudRr4a+VLF0uTa4vJF8XKuXbg/Hr33TjffKn3gp/kkkmmWSSSSaZZJJJJplkkkkmmWSS/yf5H6HANgUotAMHAAAAAElFTkSuQmCC
    mediatype: image/png
  install:
    spec:
      clusterPermissions:
      - rules:
        - apiGroups:
          - '*'
          resources:
          - '*'
          verbs:
          - '*'
        - nonResourceURLs:
          - '*'
          verbs:
          - '*'
        serviceAccountName: ibm-common-service-operator
      deployments:
      - name: ibm-common-service-operator
        spec:
          replicas: 1
          selector:
            matchLabels:
              name: ibm-common-service-operator
          strategy: {}
          template:
            metadata:
              annotations:
                productID: 068a62892a1e4db39641342e592daa25
                productMetric: FREE
                productName: IBM Cloud Platform Common Services
                productVersion: 3.4.0
              labels:
                app.kubernetes.io/instance: ibm-common-service-operator
                app.kubernetes.io/managed-by: ibm-common-service-operator
                app.kubernetes.io/name: ibm-common-service-operator
                name: ibm-common-service-operator
            spec:
              affinity:
                nodeAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                    nodeSelectorTerms:
                    - matchExpressions:
                      - key: beta.kubernetes.io/arch
                        operator: In
                        values:
                        - amd64
                        - ppc64le
                        - s390x
              containers:
              - command:
                - ibm-common-service-operator
                env:
                - name: WATCH_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.annotations['olm.targetNamespaces']
                - name: POD_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.name
                - name: OPERATOR_NAME
                  value: ibm-common-service-operator
                image: quay.io/opencloudio/common-service-operator@sha256:7e4d08a3d0cd26bae1184d72420d80cd2de157ef1dc69037006ffcf08e9c9a0b
                imagePullPolicy: Always
                name: ibm-common-service-operator
                resources:
                  limits:
                    cpu: 500m
                    memory: 512Mi
                  requests:
                    cpu: 100m
                    memory: 200Mi
                securityContext:
                  allowPrivilegeEscalation: false
                  capabilities:
                    drop:
                    - ALL
                  privileged: false
                  readOnlyRootFilesystem: true
                  runAsNonRoot: true
              serviceAccountName: ibm-common-service-operator
    strategy: deployment
  installModes:
  - supported: true
    type: OwnNamespace
  - supported: true
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: true
    type: AllNamespaces
  keywords:
  - IBM
  - Cloud
  maintainers:
  - email: support@ibm.com
    name: IBM Support
  maturity: alpha
  provider:
    name: IBM
  replaces: ibm-common-service-operator.v3.4.1
  version: 3.4.2
